name: Build and publish container
description: Sets up standard tags, then builds and publishes a container image to the container registry.

inputs:
  registryUsername:
    description: The username to use to authenticate with the container registry.
    required: true
  registryPassword:
    description: The token to use to authenticate with the container registry.
    required: true
  imageNames:
    description: The names of the images to tag and publish.
    required: true
  version:
    description: The semantic version of the image to tag and publish.
    required: true
  containerSecrets:
    description: The secrets to use when building the container.
    required: false
    default: ""
  context:
    description: The context to use when building. Defaults to ./src/
    required: false
    default: ./src/
  dockerfile:
    description: The dockerfile to build. Defaults to ./src/Dockerfile
    required: false
    default: ./src/Dockerfile
  registryHost:
    description: The host of the container registry to push to. Defaults to ghcr.io
    required: false
    default: ghcr.io

runs:
  using: composite
  steps:
    - id: containerMetadata
      name: Generate tags
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.imageNames }}
        # generate tags based on the following events/attributes
        tags: |
          type=ref,event=branch,suffix=-latest
          type=ref,event=pr
          type=semver,pattern={{version}},value=${{ inputs.version }}
          type=semver,pattern={{major}}.{{minor}},value=${{ inputs.version }}
          type=semver,pattern={{major}},value=${{ inputs.version }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registryHost }}
        username: ${{ inputs.registryUsername }}
        password: ${{ inputs.registryPassword }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile }}
        push: true
        tags: ${{ steps.containerMetadata.outputs.tags }}
        labels: ${{ steps.containerMetadata.outputs.labels }}
        secrets: ${{ inputs.containerSecrets }}

    - name: Create container image build summary
      shell: bash
      run: |
        image_name=${{ inputs.imageNames }}
        image=${image_name##*/}
        echo "# Created Containers" >> $GITHUB_STEP_SUMMARY
        echo "Image pushed to [GitHub Container Registry](https://github.com/${{ github.repository }}/pkgs/container/${image})." >> $GITHUB_STEP_SUMMARY

        IFS=$'\n'
        echo "## Tags:" >> $GITHUB_STEP_SUMMARY
        echo "${{ steps.containerMetadata.outputs.tags }}" | while read -r tag
        do
          echo "- ${tag}" >> $GITHUB_STEP_SUMMARY
        done
        echo "## Labels:" >> $GITHUB_STEP_SUMMARY
        echo "${{ steps.containerMetadata.outputs.labels }}" | while read -r label
        do
          echo "- ${label}" >> $GITHUB_STEP_SUMMARY
        done
        unset IFS
